name: Rust

on: [ push ]
#  release:
#    types: [ created ]

env:
  CARGO_TERM_COLOR: always
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  OPENSSL_DIR: /usr/lib/ssl
  OPENSSL_INCLUDE_DIR: /usr/include/openssl
  OPENSSL_LIB_DIR: /usr/lib/x86_64-linux-gnu
  PKG_CONFIG_PATH: /usr/local/lib/x86_64-linux-gnu/pkgconfig:/usr/local/lib/pkgconfig:/usr/local/share/pkgconfig:/usr/lib/x86_64-linux-gnu/pkgconfig:/usr/lib/pkgconfig:/usr/share/pkgconfig:/usr/lib/ssl/pkgconfig

jobs:
  build:
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - name: Linux-amd64
            #            runner: rust:1.76.0-alpine3.19
            runner: ubuntu-22.04
            target: x86_64-unknown-linux-gnu
            command: cross
            feature: openssl
          #          - name: Linux-aarch64
          #            runner: ubuntu-22.04
          #            target: aarch64-unknown-linux-gnu
          #            command: cross
          #            feature: openssl
          #          - name: Windows-x86_64
          #            runner: windows-latest
          #            target: x86_64-pc-windows-msvc
          #            command: cross
          #          - name: FreeBSD-x86_64
          #            runner: ubuntu-22.04
          #            target: x86_64-unknown-freebsd
          #            command: cross
          #            feature: openssl
          # cargo
    #          - name: MacOs-aarch64
    #            runner: macOS-latest
    #            target: aarch64-apple-darwin
    #            command: cargo
    #          - name: MacOS-x86_64
    #            runner: macOS-latest
    #            target: x86_64-apple-darwin
    #            command: cargo

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Cache
        uses: Swatinem/rust-cache@v2

      - name: Install OpenSSL
        if: matrix.feature == 'openssl'
        run: sudo apt-get update --yes && sudo apt-get install --yes pkg-config libssl-dev musl-dev
      #        run: apk add --no-cache curl clang cmake libxml2-dev openssl-dev musl-fts-dev bsd-compat-headers

      - name: Debug
        if: matrix.feature == 'openssl'
        run: pkg-config --variable pc_path pkg-config && printenv

      # Only install cross if we need it
      # Install via cargo-binstall which I found faster
      - name: Install Cross
        if: matrix.command == 'cross'
        shell: bash
        run: |
          curl -L --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh | bash
          cargo binstall --no-confirm cross

      - name: Build Binary
        run: ${{ matrix.command }} build --verbose --release --target ${{ matrix.target }}


      